; ECSE 436 - Signal Processing Hardware
; Lab 3
; Salenikovich, Stepan - 260326129
; Smith, Severin - 260349085
;
; convolve_asm_func.sa 
; int convolve_as_func(int x[], int w[], int x_idx, int w_length)

					.global _convolve_as_func							;function def
_convolve_as_func 	.cproc	x, w, x_idx, w_length						;function parameters
					.reg	a, b, prod, sum, saved_amr, temp_amr		;registers to use
					zero	sum											;init sum to zero
					shl	x_idx, 2, x_idx									;multiply index by 2, because byte addressable
					;add x, x_idx, x									;this is supposed to shift the x_idx by 1 before adding, but messes up programs for some reason
					add	x,x_idx,x										;gets the pointer to the newest value of x
					mvc AMR, saved_amr									;save AMR to restore later
					mvk	0x4,temp_amr									;A5 points to the buffer -> ...0100
					mvklh	0x8, temp_amr								;N=01000 because block size is 64 (16 ints)
					MVC temp_amr, AMR									;so AMR=0x00080004
loop:				.trip 10, 51										;between 10 and 51 itterations
					ldw	*w++,a											;load and post increment w
					ldw	*x--,b											;load and post decrement x
					mpyi	a,b,prod									;multiply 
					add prod,sum,sum									;sum
	[w_length]		sub	w_length,1,w_length									;decrement filter length
	[w_length]		b	loop											;branch until itterated filter length times
					MVC saved_amr, AMR									;restore AMR
					.return	sum											;return
					.endproc